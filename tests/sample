#include <stdio.h>

int main(void) {
    #{ :indent
    (loop :for i :from 0 :below 10
          :do (format t "printf(\"Loop: %d\", ~D);~%" i)) #}
    return 0;
}

#include <stdio.h>

int main(void) {
    printf("Loop: %d", 0);
    printf("Loop: %d", 1);
    printf("Loop: %d", 2);
    printf("Loop: %d", 3);
    printf("Loop: %d", 4);
    printf("Loop: %d", 5);
    printf("Loop: %d", 6);
    printf("Loop: %d", 7);
    printf("Loop: %d", 8);
    printf("Loop: %d", 9);
    return 0;
}

#include <stdio.h>

int main(void) {
    #{ :indent
    (loop :for i :from 0 :below 3
          :do (format t "printf(\"Loop: %d\", ~D);~%" i))
    #}
    return 0;
}

#include <stdio.h>

int main(void) {
    printf("Loop: %d", 0);
    printf("Loop: %d", 1);
    printf("Loop: %d", 2);
    return 0;
}

(defun foo (#{ (format t "~{~(~A~)~^ ~}" (loop :for symbol :in '(a b c) :collect symbol)) #}
            #{ :chop #}
            #{ (format t " ~{~(~A~)~^ ~}" (loop :for symbol :in '(x y z) :collect symbol)) #})
  (values a b c x y z))

(defun foo (a b c x y z)
  (values a b c x y z))

key1 = #{ (princ "value1") #}
key2 = #{ (princ "value2") #}

key1 = value1
key2 = value2

hoge = #{ (princ 100) #}
end

hoge = 100
end